// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// datasource db {
//   provider = "sqlite"
//   url      = "file:dev.sqlite"
// }
datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Session {
  id          String    @id
  shop        String
  state       String
  isOnline    Boolean   @default(false)
  scope       String?
  expires     DateTime?
  accessToken String
  userId      BigInt?
}

model QRCode {
  id               Int      @id @default(autoincrement())
  title            String
  shop             String
  productId        String
  productHandle    String
  productVariantId String
  destination      String
  scans            Int      @default(0)
  createdAt        DateTime @default(now())
}

model Shop {
  id          Int          @id @default(autoincrement())
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @default(now())
  name        String
  domain      String
  storeId     String       @unique
  vipPrograms VipProgram[]
}

model Customer {
  id        Int         @id @default(autoincrement())
  firstName String
  lastName  String
  email     String      @unique
  shopifyId String      @unique
  vipId     Int? // Foreign key referencing VipProgram
  vip       VipProgram? @relation(fields: [vipId], references: [id])
}

model DiscountCode {
  id          Int          @id @default(autoincrement())
  code        String       @unique
  description String?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @default(now())
  VipProgram  VipProgram[]
}

model VipProgram {
  id             Int          @id @default(autoincrement())
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @default(now())
  name           String
  storeId        String // Refers to the Shop's Shopify id, not our local DB ID
  shop           Shop         @relation(fields: [storeId], references: [storeId])
  customers      Customer[]
  discountCodeId Int
  discountCode   DiscountCode @relation(fields: [discountCodeId], references: [id])
}
